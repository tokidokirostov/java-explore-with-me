DROP TABLE IF exists users CASCADE;
DROP TABLE IF exists categories CASCADE;
DROP TABLE IF exists compilations CASCADE;
DROP TABLE IF exists events CASCADE;
DROP TABLE IF exists requests CASCADE;
DROP TABLE IF exists events_compilations CASCADE;

CREATE TABLE IF NOT EXISTS users (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL,
        CONSTRAINT pk_user PRIMARY KEY (id),
        CONSTRAINT uq_user_email UNIQUE (email)
        );

CREATE TABLE IF NOT EXISTS categories (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
        name VARCHAR(255) UNIQUE NOT NULL ,
        CONSTRAINT pk_category PRIMARY KEY (id)
        );

CREATE TABLE IF NOT EXISTS compilations (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
        title VARCHAR(255) NOT NULL,
        pinned BOOLEAN NOT NULL,
        CONSTRAINT pk_compilation PRIMARY KEY (id)
        );

CREATE TABLE IF NOT EXISTS events (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
        annotation VARCHAR(400) NOT NULL ,
        category_id BIGINT NOT NULL ,
        confirmed_requests INT NOT NULL ,
        creation_on TIMESTAMP NOT NULL ,
        description TEXT NOT NULL ,
        event_date TIMESTAMP NOT NULL ,
        initiator_id BIGINT NOT NULL ,
        paid BOOLEAN NOT NULL ,
        participant_limit INT NOT NULL ,
        published_on TIMESTAMP ,
        request_moderation boolean NOT NULL,
        state VARCHAR(50) NOT NULL ,
        title VARCHAR(255) NOT NULL ,
        lat FLOAT NOT NULL ,
        lon FLOAT NOT NULL ,

        CONSTRAINT pk_event PRIMARY KEY (id),
        CONSTRAINT events_categories_id_fk FOREIGN KEY (category_id) REFERENCES categories (id) ,
        CONSTRAINT events_users_id_fk FOREIGN KEY (initiator_id) REFERENCES users (id)
        );

CREATE TABLE IF NOT EXISTS requests (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
        created TIMESTAMP NOT NULL,
        event_id BIGINT NOT NULL,
        requester_id BIGINT NOT NULL,
        status VARCHAR(50) NOT NULL,
        CONSTRAINT pk_request PRIMARY KEY (id),
        CONSTRAINT request_event_id_pk FOREIGN KEY (event_id) REFERENCES events (id),
        CONSTRAINT request_user_id_pk FOREIGN KEY (requester_id) REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS events_compilations (
        event_id BIGINT REFERENCES events (id) NOT NULL,
        compilations_id BIGINT REFERENCES compilations (id) NOT NULL,
        CONSTRAINT pk_events_compilations PRIMARY KEY (event_id, compilations_id)
)