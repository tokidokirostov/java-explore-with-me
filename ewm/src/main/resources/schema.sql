DROP TABLE IF exists users CASCADE;
DROP TABLE IF exists categories CASCADE;
DROP TABLE IF exists compilations CASCADE;
DROP TABLE IF exists events CASCADE;
DROP TABLE IF exists requests CASCADE;
DROP TABLE IF exists events_compilations CASCADE;

CREATE TABLE IF NOT EXISTS users (
        id BIGINT generated by default as identity not null ,
        name varchar(255) not null,
        email varchar(255) not null,
        /*CONSTRAINT primary key (id),*/
        CONSTRAINT pk_user primary key (id),
        constraint UQ_USER_EMAIL unique (email)
        /*constraint unique (email)*/
        );

CREATE TABLE IF NOT EXISTS categories (
        id BIGINT generated by default as identity not null ,
        name varchar(255) not null,
        CONSTRAINT pk_category primary key (id)
        );

CREATE TABLE IF NOT EXISTS compilations (
        id BIGINT generated by default as identity not null ,
        title varchar(255),
        pinned boolean,
        constraint pk_compilation primary key (id)
        );

CREATE TABLE IF NOT EXISTS events (
        id BIGINT generated by default as identity not null ,
        annotation varchar(400),
        category_id BIGINT,
        confirmed_requests int,
        creation_on timestamp,
        description text,
        event_date timestamp,
        initiator_id BIGINT,
        paid boolean,
        participant_limit int,
        published_on timestamp,
        request_moderation boolean,
        state varchar(255),
        title varchar(255),
        views int,
        lat float,
        lon float,

        CONSTRAINT pk_event primary key (id),
        CONSTRAINT events_categories_id_fk foreign key (category_id) references categories (id) ,
        CONSTRAINT events_users_id_fk foreign key (initiator_id) references users (id)
        );

CREATE TABLE IF NOT EXISTS requests (
        id BIGINT generated by default as identity not null ,
        created timestamp,
        event_id BIGINT,
        requester_id BIGINT,
        status varchar(128),
        CONSTRAINT pk_request primary key (id),
        CONSTRAINT request_event_id_pk foreign key (event_id) references events (id),
        CONSTRAINT request_user_id_pk foreign key (requester_id) references users (id)
);

CREATE TABLE IF NOT EXISTS events_compilations (
        event_id BIGINT references events (id),
        compilations_id BIGINT references compilations (id),
        CONSTRAINT pk_events_compilations primary key (event_id, compilations_id)
)